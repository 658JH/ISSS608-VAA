---
title: "Handson_Ex03"
author: "Hou Tao"
date: "3 Feb 2023"
date-modified: "`r Sys.Date()`"
execute: 
  echo: true
  eval: true
  warning: false
format: html
editor: visual
---

## 1. Building Funnel Plot with R

Funnel plot is a specially designed data visualisation for conducting unbiased comparison between outlets, stores or business entities.

### 1.1 Load labaries and import data

```{r}

pacman::p_load(tidyverse, FunnelPlotR, plotly, knitr)

```

```{r}

covid19 <- read.csv("data/COVID-19_DKI_Jakarta.csv") %>%
  mutate_if(is.character, as.factor)

covid19
```

### 1.2 FunnelPlotR methods

FunnelPlotR package uses ggplot to generate funnel plots. It requires a numerator (events of interest), denominator (population to be considered) and group. The key arguments selected for customisation are:

- limit: plot limits (95 or 99).
- label_outliers: to label outliers (true or false).
- Poisson_limits: to add Poisson limits to the plot.
- OD_adjust: to add overdispersed limits to the plot.
- xrange and yrange: to specify the range to display for axes, acts like a zoom function.
- Other aesthetic components such as graph title, axis labels etc.

#### 1.2.1 FunnelPlotR methods: The basic plot

```{r, warning=FALSE}

funnel_plot(
  numerator = covid19$Positive,
  denominator = covid19$Death,
  group = covid19$`Sub.district`,
  data_type = "SR"
)

```

```{r, warning=FALSE}

funnel_plot(
  numerator = covid19$Death,
  denominator = covid19$Positive,
  group = covid19$`Sub.district`,
  data_type = "PR",
  xrange = c(0, 6500),
  yrange = c(0, 0.05)
)

```

```{r, warning=FALSE}

funnel_plot(
  numerator = covid19$Death,
  denominator = covid19$Positive,
  group = covid19$`Sub.district`,
  data_type = "PR",
  xrange = c(0, 6500),
  yrange = c(0, 0.05),
  label = NA,
  title = "Cumulative COVID-19 Fatality Rate by Cumulative Total number of CVOID-19 Positive Cases",
  x_label = "Cumulative COVID-19 Positive Cases",
  y_label = "Cumulative Fatality Rate"
)

```

### 1.3 Funnel Plot for Fair Visual Comparison: ggplot2 methods

#### 1.3.1 Computing the basic derived fields
To plot the funnel plot from scratch, we need to derive cumulative death rate and standard error of cumulative death rate.

```{r}
df <- covid19 %>%
  mutate(rate = Death / Positive) %>%
  mutate(rate.se = sqrt((rate * (1 - rate)) / (Positive) )) %>%
  filter(rate > 0)
```

Next, fit.mean

```{r}

fit.mean <- weighted.mean(df$rate, 1 / df$rate.se^2)

```

#### 1.3.2 Calculate lower and upper limits for 95% and 99.9% CI

```{r}

calc_limit <- function(mean, seq, pct){
  return (mean + (pct * sqrt((mean * (1 - mean)) / (seq) )))
}


number.seq <- seq(1, max(df$Positive), 1)

number.ll95 <- calc_limit(fit.mean, number.seq, -1.96)
number.ul95 <- calc_limit(fit.mean, number.seq, +1.96)

number.ll999 <- calc_limit(fit.mean, number.seq, -3.29)
number.ul999 <- calc_limit(fit.mean, number.seq, +3.29)

dfCI <- data.frame(number.ll95, number.ul95, number.ll999, number.ul999, number.seq, fit.mean)

dfCI

```

#### 1.3.3 Plotting a static funnel plot


```{r}
df
```


```{r}


p <- ggplot(df, aes(x = Positive, y = rate)) +
  
  geom_point(aes(), alpha = 0.4) +
  
  geom_line(data = dfCI, aes(x = number.seq, y = number.ll95), size = 0.5, colour = "grey40", linetype="dashed") +
  geom_line(data = dfCI, aes(x = number.seq, y = number.ul95), size = 0.5, colour = "grey40", linetype="dashed") +

  geom_line(data = dfCI, aes(x = number.seq, y = number.ll999), size = 0.5, colour = "grey40") +
  geom_line(data = dfCI, aes(x = number.seq, y = number.ul999), size = 0.5, colour = "grey40") +
  
  coord_cartesian(ylim = c(-0.02, 0.05)) +
  
  annotate("text", x = 1, y = -0.13, label = "95%", size = 3, colour = "grey40") + 
  annotate("text", x = 4.5, y = -0.18, label = "99%", size = 3, colour = "grey40") +
  
  ggtitle("Cumulative Fatality Rate by Cumulative Number of COVID-19 Cases") + 
  xlab("Cumulative Number of COVID-19 Cases") +
  ylab("Cumulative Fatality Rate") +
  theme_light() +
  
  theme(plot.title = element_text(size=12),
        legend.position = c(0.91, 0.85),
        legend.title = element_text(size = 7),
        legend.text = element_text(size = 7),
        legend.background = element_rect(colour = "grey60", linetype = "dotted"),
        legend.key.height = unit(0.3, "cm"))


p

```
#### 1.3.4 Interactive Funnel Plot: plotly + ggplot2

```{r}

fp_ggplotly <- ggplotly(p,
                        tooltip = c("label", "x", "y"))

fp_ggplotly

```
















